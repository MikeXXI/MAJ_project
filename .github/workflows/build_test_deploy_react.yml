name: Build, Test and Deploy React Application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    permissions: # Job-level permissions configuration starts here
      contents: write # 'write' access to repository contents
      pull-requests: write # 'write' access to pull requests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci and test
        run: |
          cd my-app
          npm install
          npm ci
          npm test
      - name: Set up Docker Environment - mongo / nodejs
        run: docker-compose -f docker-compose-nodejs-mongodb.yml up -d
      - name: Fix permissions
        run: |
          sudo chown -R $(whoami) .
          sudo chmod -R u+rw .
      - name: Install Dependencies
        run: |
          cd server
          npm install
      - name: Run server tests
        run: |
          cd server
          npm test
      - name: Run e2e tests with cypress
        uses: cypress-io/github-action@v6
        with:
            working-directory: my-app 
      - name: Shutdown Docker Environment - mongo / nodejs
        run: docker-compose -f docker-compose-nodejs-mongodb.yml down
      # - name: Build the stack mysql - python
      #   run: docker-compose -f docker-compose-v4.yml up -d
      # - name: Stop the stack mysql - py
      #   run: docker-compose -f docker-compose-v3.yml down
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
         token: ${{ secrets.CODECOV_TOKEN }}
      - name: Save artifact
        id: save-artifact
        uses: actions/upload-artifact@v2
        with:
          name: previous-artifact-v${{ env.BUILD_VERSION }}
          path: build

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: build

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        env:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Aiiishaaa/CI-TP1

  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.url }}
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Add a dependency to the build job
    needs: build_test
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        env:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Aiiishaaa/CI-TP1

      # - name: Update README with previous version and artifact link
      #   run: |
      #     PREVIOUS_VERSION=$(grep -oP 'Version actuelle : \K[0-9]+\.[0-9]+\.[0-9]+' README.md)
      #     echo "Previous Version: $PREVIOUS_VERSION â†’ [Link to the previous artifact](https://github.com/${{ github.repository }}/actions/runs/${{ needs.build_test.outputs.save-artifact }}/artifacts)" >> README.md
      #   shell: bash
